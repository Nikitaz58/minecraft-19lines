class Program
{
	static void Main(string[] args)
	{
		while (true)
		{
			// Вывод логотипа и карты с одновременной подстановкой персонажа
			System.Console.WriteLine("\n\n" + new string(map).Remove((offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))), 1).Insert((offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))), "8"));
			// Расчет новой позиции персонажа на основе нажатых клавиш
			var key = System.Console.ReadKey();
			position = (((!(map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '~') && !(map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '#' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '+')) ? (((position >> shift) & mask)) : ((key.Modifiers != System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.A && (map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) - 1))] == ' ' || map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) - 1))] == '~' || map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) - 1))] == '+') && ((map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '~') || (map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '#' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '+'))) ? (((position >> shift) & mask) - 1) : ((key.Modifiers != System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.D && (map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) + 1))] == ' ' || map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) + 1))] == '~' || map[offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) + 1))] == '+') && ((map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '~') || (map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '#' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '+'))) ? (((position >> shift) & mask) + 1) : (((position >> shift) & mask))))) << 8) | ((!(map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '~') && !(map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '#' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '+')) ? ((position & mask) + 1) : ((key.Modifiers != System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.W && (((map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == ' ' || map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '~' || map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '+') && (map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '#' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+')) || ((map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == ' ' || map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '~' || map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '+') && (map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))] == '~') && (map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '+' || map[offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))] == '~')))) ? ((position & mask) - 1) : ((key.Modifiers != System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.S && (map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == ' ' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '~' || map[offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))] == '+')) ? ((position & mask) + 1) : ((position & mask)))));
			// 1 и 2 проход - обработка воды, 3 проход - установка и разрушение блоков
			for (int index = 0; index < ((map.Length - offset) * 3); index++)
				map[offset + (index % (map.Length - offset))] = ((((index / (map.Length - offset)) == 0) && map[offset + (index % (map.Length - offset))] == ' ' && (map[offset + (index % (map.Length - offset)) - (width + 1)] == '~' || map[offset + (index % (map.Length - offset)) - 1] == '~' || map[offset + (index % (map.Length - offset)) + 1] == '~')) ? ('.') : (((index / (map.Length - offset)) == 1) && (map[offset + (index % (map.Length - offset))] == '.') ? ('~') : ((((index / (map.Length - offset)) == 2) && key.Key == System.ConsoleKey.D1 && (offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == '+' || map[offset + (index % (map.Length - offset))] == '~')) ? (' ') : ((((index / (map.Length - offset)) == 2) && key.Key == System.ConsoleKey.D2 && (offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == ' ' || map[offset + (index % (map.Length - offset))] == '~')) ? ('#') : ((((index / (map.Length - offset)) == 2) && key.Key == System.ConsoleKey.D3 && (offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == ' ' || map[offset + (index % (map.Length - offset))] == '~')) ? ('+') : ((((index / (map.Length - offset)) == 2) && key.Key == System.ConsoleKey.D4 && (offset + ((position & mask) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && map[offset + (index % (map.Length - offset))] == ' ') ? ('~') : ((((index / (map.Length - offset)) == 2) && key.Modifiers == System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.A && (offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) - 1))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == '#' || map[offset + (index % (map.Length - offset))] == '+')) ? (' ') : ((((index / (map.Length - offset)) == 2) && key.Modifiers == System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.D && (offset + ((position & mask) * (width + 1) + (((position >> shift) & mask) + 1))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == '#' || map[offset + (index % (map.Length - offset))] == '+')) ? (' ') : ((((index / (map.Length - offset)) == 2) && key.Modifiers == System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.W && (offset + (((position & mask) - 1) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == '#' || map[offset + (index % (map.Length - offset))] == '+')) ? (' ') : ((((index / (map.Length - offset)) == 2) && key.Modifiers == System.ConsoleModifiers.Shift && key.Key == System.ConsoleKey.S && (offset + (((position & mask) + 1) * (width + 1) + ((position >> shift) & mask))) == (offset + (index % (map.Length - offset))) && (map[offset + (index % (map.Length - offset))] == '#' || map[offset + (index % (map.Length - offset))] == '+')) ? (' ') : (map[offset + (index % (map.Length - offset))])))))))))));
		}
	}
	private static int mask = 255, shift = 8, width = 79, offset = 801, position = (25 << 8) | 2;
	private static char[] map = "\n     ###`   ##``##``##`  ##``######  ######  ######``######``######`#######    \n     ###`` ###``##``###``##``##````  ##````  ##``##``#````#``##````````##``    \n     ###```###``##``###``##``##````  ##````  ##``#```#````#``##````````##`     \n    `########```##``##`####``######  ##````  #####```##```#``#######```###     \n    ###`##`##``##``###`####``##````  ##      ##``##``######``###````````##     \n   `##``#``##``##``##```###``##````  ##      ##``##``###`##```##```  ```##`    \n   ##``````##``##``##```##```#####`  ######  ##``##``###``##``##``   ```###    \n   ##`````###``##``##```##````#####  ######  `#``###``##``##``##`    ````##    \n   `````  ````````````  ```````````  ``````  ``  ```````````````      `````    \n    ````   ```````````   ``````````  ``````  ``  `` ```````````       ````     \n###############################################################################\n#              ##++                                +################+         #\n#              ###+                                +#####        ####+        #\n##            +###+   +##### #+         ++         +####         #########++###\n###~~~~~~~~~~~+###+######### ##+        +#+       +#####          #######  +###\n####~~~~~~~~######+######### ###+      +##+ +##########            #####  +####\n####~~~~~~~#######+######### ####+    +################                  +#####\n####### ##########+######### ######+##################   +##~~~~~~~############\n####### ##########+## +####   #####+##############      +#####~~~~#############\n##      ####    ##+## +###         +   ###########     +#######################\n#####+            +   +        +#####+                +########################\n###############################################################################".ToCharArray();
}
